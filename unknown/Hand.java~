/*WARNING: Be careful when modifiying this file on Dropbox!! If more than one person is modifiying it at a time and you
 * both save, then there is a chance for data loss and we all lose!*/
import java.awt.*;
import java.util.ArrayList;
import objectdraw.*;

public class Hand
{
	private int currentPlayer;
	private int player;
	private int numClay;
	private int numLumber;
	private int numOre;
	private int numSheep;
	private int numWheat;
	public ArrayList <ResourceCard> cards;
	public ArrayList <DevelopmentCard> dCards;
 
	private int priceClay;
	private int priceLumber;
	private int priceOre;
	private int priceSheep;
	private int priceWheat;
 
	public Hand(int currentPlayer)
	{
		player = currentPlayer;
		cards = new ArrayList <ResourceCard>();
		dCards = new ArrayList <DevelopmentCard>();
	}
 
	public void addCard(ResourceCard newCard)
	{
		cards.add(newCard);
		updateHand();
	}
 
	public void buyItem(Item item)
	{
		if (numClay >= item.priceClay && numLumber >= item.priceLumber && numOre >= item.priceOre && numSheep >= item.priceSheep && numWheat >= item.priceWheat)
		{
			numClay -= item.priceClay;
			removeFromArray(item.priceClay, 0);
			numLumber -= item.priceLumber;
			removeFromArray(item.priceLumber, 1);
			numOre -= item.priceOre;
			removeFromArray(item.priceOre, 2);
			numSheep -= item.priceSheep;
			removeFromArray(item.priceSheep, 3);
			numWheat -= item.priceWheat;
			removeFromArray(item.priceWheat, 4);
		}
		else
		{
			System.out.println("You've not enough minerals");
		}
		updateHand();
	}
 
	public void displayHand()
	{
		int x = 10;
		int y = 30;
		for(int i = 0; i < cards.size(); i++)
		{
			cards.get(i).displayCard(new Location( x, y));
			x+=60;
		}
	}
	
	public void updateHand()
	{
		for(int i = 0; i < cards.size(); i++)
		{
			//cards.get(i).removeCard(); //this is the source of the error
		}
		numClay = 0;
		numLumber = 0;
		numOre = 0;
		numSheep = 0;
		numWheat = 0;
  
		for (int i = 0; i< cards.size(); i++)
 		{
			if (cards.get(i).cardValue == 1)
 			{
				numClay++;
			}
			else if (cards.get(i).cardValue == 2)
			{
				numLumber++;
			}
			else if (cards.get(i).cardValue == 3)
			{
				numOre++;
			}
			else if (cards.get(i).cardValue == 4)
			{
				numSheep++;
			}
			else if (cards.get(i).cardValue == 5)
			{
				numWheat++;
			}
		}
		displayHand();
	}
	
	private void removeFromArray(int price, int resourceType)
	{
		for(int i = 0; i< cards.size(); i++)
		{
			if (cards.get(i).cardValue == resourceType && resourceType > 0)
			{
				cards.remove(i);
				i--;
				resourceType--;
			}
		}
	}	
}
